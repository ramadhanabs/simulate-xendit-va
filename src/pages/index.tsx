import Head from "next/head"
import { Container, Text, Flex, Input, Select, Button } from "@chakra-ui/react"
import { useForm } from "react-hook-form"
import axios from "axios"
import { useToast } from "@chakra-ui/react"

const BANK_CODE = [
  "BCA",
  "BNI",
  "BSI",
  "BRI",
  "MANDIRI",
  "PERMATA",
  "SAHABAT_SAMPOERNA",
  "BJB",
  "CIMB",
]

interface FormValues {
  transfer_amount: string
  bank_account_number: string
  bank_code: string
}

export default function Home() {
  const {
    register,
    handleSubmit,
    reset,
    control,
    formState: { errors, isValid, isSubmitting },
  } = useForm<FormValues>()
  const toast = useToast()

  const onSubmit = async (data: FormValues) => {
    try {
      const { transfer_amount, bank_account_number, bank_code } = data
      const payload = {
        transfer_amount: parseInt(transfer_amount),
        bank_account_number,
        bank_code,
      }

      const res = await axios.post("/api/xendit", payload)
      if (res.status === 200) {
        toast({
          title: "Payment Success",
          description: "Check your order detail",
          status: "success",
          isClosable: true,
        })
      }
    } catch (error: any) {
      toast({
        title: "Payment Failed",
        description: error?.response?.data?.message,
        status: "error",
        isClosable: true,
      })
    }
  }
  return (
    <>
      <Head>
        <title>Simulate Xendit VA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex alignItems="center" justifyContent="center" flexDir="column" height="100vh">
        <Container
          maxW="container.sm"
          bg="white"
          borderRadius="24px"
          border="1px solid #e4e7eb"
          padding="24px"
        >
          <Text color="black" fontWeight={700} fontSize="4xl" textAlign="center" mb="48px">
            Simulate Xendit VA ðŸ’¸
          </Text>

          <form onSubmit={handleSubmit(onSubmit)}>
            <Flex flexDir="column" gap="16px">
              <div>
                <Input
                  placeholder="Transfer Amount"
                  {...register("transfer_amount", {
                    required: "This is required",
                  })}
                />
                {errors.transfer_amount && (
                  <Text fontSize="xs" color="red.500" mt="1">
                    {errors.transfer_amount.message}
                  </Text>
                )}
              </div>
              <Input
                placeholder="Bank Account Number"
                type="number"
                {...register("bank_account_number", {
                  required: "This is required",
                })}
              />
              <Select
                placeholder="Select Bank Code"
                {...register("bank_code", {
                  required: "This is required",
                })}
              >
                {BANK_CODE.map(bank => (
                  <option key={bank} value={bank}>
                    {bank}
                  </option>
                ))}
              </Select>
              <Button
                mt="40px"
                colorScheme="teal"
                type="submit"
                isDisabled={!isValid}
                isLoading={isSubmitting}
              >
                Pay
              </Button>
            </Flex>
          </form>
        </Container>
        <Text color="#4f5464" fontSize="sm" textAlign="center" marginY="16px">
          Created with ðŸ’• by <b>Eraspace Dev</b>
        </Text>
      </Flex>
    </>
  )
}
